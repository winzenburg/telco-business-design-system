/**
 * Visual Regression Tests for Menu
 * Auto-generated by generate-vrt-baselines.js
 */

import { test, expect } from '@playwright/test';

const STORYBOOK_URL = 'http://localhost:6006';

async function navigateToStory(page: any, storyId: string, theme = 'light') {
  const url = `${STORYBOOK_URL}/iframe.html?id=${storyId}&viewMode=story&theme=${theme}`;
  await page.goto(url);
  await page.waitForLoadState('networkidle');
  await page.waitForTimeout(500); // Allow animations to settle
}

async function stabilizeVisuals(page: any) {
  // Disable animations and hide variable content
  await page.addStyleTag({
    content: `
      *, *::before, *::after {
        animation-duration: 0s !important;
        transition-duration: 0s !important;
      }
      .loading, .spinner, [data-testid*="loading"] {
        visibility: hidden !important;
      }
    `
  });
}

test.describe('Menu Visual Tests', () => {
  
  test('Default - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--default', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--default-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Default - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--default', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--default-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Labels - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-labels', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-labels-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Labels - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-labels', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-labels-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Shortcuts - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-shortcuts', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-shortcuts-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Shortcuts - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-shortcuts', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-shortcuts-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Checkboxes - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-checkboxes', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-checkboxes-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Checkboxes - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-checkboxes', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-checkboxes-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Radio Groups - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-radio-groups', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-radio-groups-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Radio Groups - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-radio-groups', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-radio-groups-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Submenus - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-submenus', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-submenus-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Submenus - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--with-submenus', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--with-submenus-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Variants - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--variants', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--variants-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Variants - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--variants', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--variants-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Sizes - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--sizes', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--sizes-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Sizes - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--sizes', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--sizes-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Context Menu Example - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--context-menu-example', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--context-menu-example-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Context Menu Example - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--context-menu-example', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--context-menu-example-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Filter Menu - light theme', async ({ page }) => {
    await navigateToStory(page, 'menu--filter-menu', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--filter-menu-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Filter Menu - dark theme', async ({ page }) => {
    await navigateToStory(page, 'menu--filter-menu', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'menu--filter-menu-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
});

// Interactive state tests for key components


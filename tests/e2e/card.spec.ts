/**
 * Visual Regression Tests for Card
 * Auto-generated by generate-vrt-baselines.js
 */

import { test, expect } from '@playwright/test';

const STORYBOOK_URL = 'http://localhost:6006';

async function navigateToStory(page: any, storyId: string, theme = 'light') {
  const url = `${STORYBOOK_URL}/iframe.html?id=${storyId}&viewMode=story&theme=${theme}`;
  await page.goto(url);
  await page.waitForLoadState('networkidle');
  await page.waitForTimeout(500); // Allow animations to settle
}

async function stabilizeVisuals(page: any) {
  // Disable animations and hide variable content
  await page.addStyleTag({
    content: `
      *, *::before, *::after {
        animation-duration: 0s !important;
        transition-duration: 0s !important;
      }
      .loading, .spinner, [data-testid*="loading"] {
        visibility: hidden !important;
      }
    `
  });
}

test.describe('Card Visual Tests', () => {
  
  test('Default - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--default', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--default-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Default - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--default', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--default-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Simple - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--simple', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--simple-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Simple - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--simple', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--simple-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Variants - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--variants', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--variants-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Variants - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--variants', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--variants-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Media - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--with-media', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--with-media-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Media - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--with-media', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--with-media-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Dividers - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--with-dividers', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--with-dividers-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Dividers - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--with-dividers', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--with-dividers-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Card Sizes - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--card-sizes', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--card-sizes-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Card Sizes - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--card-sizes', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--card-sizes-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Action Layouts - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--action-layouts', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--action-layouts-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Action Layouts - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--action-layouts', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--action-layouts-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Draggable Cards - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--draggable-cards', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--draggable-cards-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Draggable Cards - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--draggable-cards', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--draggable-cards-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Interactive - light theme', async ({ page }) => {
    await navigateToStory(page, 'card--interactive', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--interactive-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Interactive - dark theme', async ({ page }) => {
    await navigateToStory(page, 'card--interactive', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'card--interactive-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
});

// Interactive state tests for key components


/**
 * Visual Regression Tests for FormElements
 * Auto-generated by generate-vrt-baselines.js
 */

import { test, expect } from '@playwright/test';

const STORYBOOK_URL = 'http://localhost:6006';

async function navigateToStory(page: any, storyId: string, theme = 'light') {
  const url = `${STORYBOOK_URL}/iframe.html?id=${storyId}&viewMode=story&theme=${theme}`;
  await page.goto(url);
  await page.waitForLoadState('networkidle');
  await page.waitForTimeout(500); // Allow animations to settle
}

async function stabilizeVisuals(page: any) {
  // Disable animations and hide variable content
  await page.addStyleTag({
    content: `
      *, *::before, *::after {
        animation-duration: 0s !important;
        transition-duration: 0s !important;
      }
      .loading, .spinner, [data-testid*="loading"] {
        visibility: hidden !important;
      }
    `
  });
}

test.describe('FormElements Visual Tests', () => {
  
  test('All Input States - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--all-input-states', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--all-input-states-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('All Input States - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--all-input-states', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--all-input-states-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Complete Input Structure - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--complete-input-structure', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--complete-input-structure-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Complete Input Structure - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--complete-input-structure', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--complete-input-structure-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Input Icon Variations - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--input-icon-variations', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--input-icon-variations-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Input Icon Variations - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--input-icon-variations', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--input-icon-variations-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Basic Elements - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--basic-elements', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--basic-elements-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Basic Elements - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--basic-elements', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--basic-elements-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Form States - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--form-states', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--form-states-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Form States - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--form-states', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--form-states-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Complete Form Example - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--complete-form-example', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--complete-form-example-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Complete Form Example - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--complete-form-example', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--complete-form-example-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Figma Specifications - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--figma-specifications', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--figma-specifications-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Figma Specifications - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--figma-specifications', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--figma-specifications-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Skeleton Loading States - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--skeleton-loading-states', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--skeleton-loading-states-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Skeleton Loading States - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--skeleton-loading-states', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--skeleton-loading-states-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Checkbox States - light theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--checkbox-states', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--checkbox-states-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Checkbox States - dark theme', async ({ page }) => {
    await navigateToStory(page, 'formelements--checkbox-states', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'formelements--checkbox-states-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
});

// Interactive state tests for key components


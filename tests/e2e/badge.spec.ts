/**
 * Visual Regression Tests for Badge
 * Auto-generated by generate-vrt-baselines.js
 */

import { test, expect } from '@playwright/test';

const STORYBOOK_URL = 'http://localhost:6006';

async function navigateToStory(page: any, storyId: string, theme = 'light') {
  const url = `${STORYBOOK_URL}/iframe.html?id=${storyId}&viewMode=story&theme=${theme}`;
  await page.goto(url);
  await page.waitForLoadState('networkidle');
  await page.waitForTimeout(500); // Allow animations to settle
}

async function stabilizeVisuals(page: any) {
  // Disable animations and hide variable content
  await page.addStyleTag({
    content: `
      *, *::before, *::after {
        animation-duration: 0s !important;
        transition-duration: 0s !important;
      }
      .loading, .spinner, [data-testid*="loading"] {
        visibility: hidden !important;
      }
    `
  });
}

test.describe('Badge Visual Tests', () => {
  
  test('Default - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--default', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--default-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Default - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--default', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--default-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Secondary - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--secondary', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--secondary-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Secondary - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--secondary', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--secondary-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Destructive - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--destructive', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--destructive-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Destructive - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--destructive', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--destructive-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Outline - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--outline', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--outline-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Outline - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--outline', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--outline-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Dismissible - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--dismissible', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--dismissible-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Dismissible - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--dismissible', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--dismissible-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Variants - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--variants', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--variants-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Variants - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--variants', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--variants-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Sizes - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--sizes', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--sizes-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Sizes - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--sizes', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--sizes-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Icons - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--with-icons', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--with-icons-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Icons - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--with-icons', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--with-icons-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Avatars - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--with-avatars', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--with-avatars-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Avatars - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--with-avatars', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--with-avatars-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Assist Chips - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--assist-chips', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--assist-chips-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Assist Chips - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--assist-chips', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--assist-chips-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Filter Chips - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--filter-chips', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--filter-chips-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Filter Chips - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--filter-chips', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--filter-chips-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Input Chips - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--input-chips', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--input-chips-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Input Chips - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--input-chips', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--input-chips-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Suggestion Chips - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--suggestion-chips', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--suggestion-chips-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Suggestion Chips - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--suggestion-chips', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--suggestion-chips-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Disabled States - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--disabled-states', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--disabled-states-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Disabled States - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--disabled-states', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--disabled-states-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Interactive Example - light theme', async ({ page }) => {
    await navigateToStory(page, 'badge--interactive-example', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--interactive-example-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Interactive Example - dark theme', async ({ page }) => {
    await navigateToStory(page, 'badge--interactive-example', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'badge--interactive-example-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
});

// Interactive state tests for key components


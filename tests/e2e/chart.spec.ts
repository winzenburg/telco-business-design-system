/**
 * Visual Regression Tests for Chart
 * Auto-generated by generate-vrt-baselines.js
 */

import { test, expect } from '@playwright/test';

const STORYBOOK_URL = 'http://localhost:6006';

async function navigateToStory(page: any, storyId: string, theme = 'light') {
  const url = `${STORYBOOK_URL}/iframe.html?id=${storyId}&viewMode=story&theme=${theme}`;
  await page.goto(url);
  await page.waitForLoadState('networkidle');
  await page.waitForTimeout(500); // Allow animations to settle
}

async function stabilizeVisuals(page: any) {
  // Disable animations and hide variable content
  await page.addStyleTag({
    content: `
      *, *::before, *::after {
        animation-duration: 0s !important;
        transition-duration: 0s !important;
      }
      .loading, .spinner, [data-testid*="loading"] {
        visibility: hidden !important;
      }
    `
  });
}

test.describe('Chart Visual Tests', () => {
  
  test('Line Chart - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--line-chart', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--line-chart-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Line Chart - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--line-chart', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--line-chart-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Area Chart - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--area-chart', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--area-chart-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Area Chart - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--area-chart', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--area-chart-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Bar Chart - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--bar-chart', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--bar-chart-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Bar Chart - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--bar-chart', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--bar-chart-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Pie Chart - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--pie-chart', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--pie-chart-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Pie Chart - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--pie-chart', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--pie-chart-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Small Charts - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--small-charts', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--small-charts-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Small Charts - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--small-charts', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--small-charts-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Categorical Color Theme - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--categorical-color-theme', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--categorical-color-theme-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Categorical Color Theme - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--categorical-color-theme', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--categorical-color-theme-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Sequential Color Theme - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--sequential-color-theme', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--sequential-color-theme-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Sequential Color Theme - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--sequential-color-theme', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--sequential-color-theme-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Signal Color Theme - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--signal-color-theme', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--signal-color-theme-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Signal Color Theme - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--signal-color-theme', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--signal-color-theme-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('All Color Themes - light theme', async ({ page }) => {
    await navigateToStory(page, 'chart--all-color-themes', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--all-color-themes-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('All Color Themes - dark theme', async ({ page }) => {
    await navigateToStory(page, 'chart--all-color-themes', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'chart--all-color-themes-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
});

// Interactive state tests for key components


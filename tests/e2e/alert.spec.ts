/**
 * Visual Regression Tests for Alert
 * Auto-generated by generate-vrt-baselines.js
 */

import { test, expect } from '@playwright/test';

const STORYBOOK_URL = 'http://localhost:6006';

async function navigateToStory(page: any, storyId: string, theme = 'light') {
  const url = `${STORYBOOK_URL}/iframe.html?id=${storyId}&viewMode=story&theme=${theme}`;
  await page.goto(url);
  await page.waitForLoadState('networkidle');
  await page.waitForTimeout(500); // Allow animations to settle
}

async function stabilizeVisuals(page: any) {
  // Disable animations and hide variable content
  await page.addStyleTag({
    content: `
      *, *::before, *::after {
        animation-duration: 0s !important;
        transition-duration: 0s !important;
      }
      .loading, .spinner, [data-testid*="loading"] {
        visibility: hidden !important;
      }
    `
  });
}

test.describe('Alert Visual Tests', () => {
  
  test('Default - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--default', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--default-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Default - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--default', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--default-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Info Alert - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--info-alert', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--info-alert-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Info Alert - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--info-alert', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--info-alert-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Success - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--success', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--success-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Success - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--success', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--success-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Warning - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--warning', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--warning-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Warning - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--warning', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--warning-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Error - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--error', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--error-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Error - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--error', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--error-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Actions - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--with-actions', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--with-actions-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Actions - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--with-actions', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--with-actions-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Dismissible - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--dismissible', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--dismissible-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Dismissible - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--dismissible', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--dismissible-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Banner Layout - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--banner-layout', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--banner-layout-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Banner Layout - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--banner-layout', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--banner-layout-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Floating Layout - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--floating-layout', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--floating-layout-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Floating Layout - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--floating-layout', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--floating-layout-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Multiple Actions - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--with-multiple-actions', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--with-multiple-actions-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Multiple Actions - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--with-multiple-actions', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--with-multiple-actions-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Long Content - light theme', async ({ page }) => {
    await navigateToStory(page, 'alert--long-content', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--long-content-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Long Content - dark theme', async ({ page }) => {
    await navigateToStory(page, 'alert--long-content', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'alert--long-content-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
});

// Interactive state tests for key components


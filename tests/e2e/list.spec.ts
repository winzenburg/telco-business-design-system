/**
 * Visual Regression Tests for List
 * Auto-generated by generate-vrt-baselines.js
 */

import { test, expect } from '@playwright/test';

const STORYBOOK_URL = 'http://localhost:6006';

async function navigateToStory(page: any, storyId: string, theme = 'light') {
  const url = `${STORYBOOK_URL}/iframe.html?id=${storyId}&viewMode=story&theme=${theme}`;
  await page.goto(url);
  await page.waitForLoadState('networkidle');
  await page.waitForTimeout(500); // Allow animations to settle
}

async function stabilizeVisuals(page: any) {
  // Disable animations and hide variable content
  await page.addStyleTag({
    content: `
      *, *::before, *::after {
        animation-duration: 0s !important;
        transition-duration: 0s !important;
      }
      .loading, .spinner, [data-testid*="loading"] {
        visibility: hidden !important;
      }
    `
  });
}

test.describe('List Visual Tests', () => {
  
  test('One Line List - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--one-line-list', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--one-line-list-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('One Line List - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--one-line-list', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--one-line-list-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Two Line List - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--two-line-list', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--two-line-list-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Two Line List - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--two-line-list', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--two-line-list-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Three Line List - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--three-line-list', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--three-line-list-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Three Line List - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--three-line-list', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--three-line-list-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Leading Icons - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--with-leading-icons', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--with-leading-icons-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Leading Icons - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--with-leading-icons', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--with-leading-icons-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Trailing Elements - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--with-trailing-elements', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--with-trailing-elements-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Trailing Elements - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--with-trailing-elements', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--with-trailing-elements-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('With Avatars - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--with-avatars', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--with-avatars-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('With Avatars - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--with-avatars', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--with-avatars-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Interactive List - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--interactive-list', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--interactive-list-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Interactive List - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--interactive-list', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--interactive-list-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Sectioned List - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--sectioned-list', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--sectioned-list-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Sectioned List - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--sectioned-list', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--sectioned-list-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Status List - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--status-list', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--status-list-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Status List - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--status-list', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--status-list-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Actions List - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--actions-list', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--actions-list-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Actions List - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--actions-list', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--actions-list-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Density Variations - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--density-variations', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--density-variations-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Density Variations - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--density-variations', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--density-variations-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  test('Variant Showcase - light theme', async ({ page }) => {
    await navigateToStory(page, 'list--variant-showcase', 'light');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--variant-showcase-light.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
  
  test('Variant Showcase - dark theme', async ({ page }) => {
    await navigateToStory(page, 'list--variant-showcase', 'dark');
    await stabilizeVisuals(page);
    
    await expect(page.locator('#storybook-root')).toHaveScreenshot(
      'list--variant-showcase-dark.png',
      {
        threshold: 0.2,
        animations: 'disabled'
      }
    );
  });
});

// Interactive state tests for key components

